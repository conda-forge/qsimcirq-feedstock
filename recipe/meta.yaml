{% set name = "qsimcirq" %}
{% set version = "0.20.0" %}
{% set build = 0 %}

# Prioritize over CPU builds
{% if cuda_compiler_version in (None, "None", True, False) %}
{% set cuda_major = 0 %}
{% set build = build + 200 %}
{% else %}
{% set cuda_major = environ.get("cuda_compiler_version", "11.2").split(".")[0] | int %}
{% endif %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/quantumlib/qsim/archive/refs/tags/v{{ version }}.tar.gz
  sha256: c69e4801d2ac3012e158fd8d70b8434caa71e894a23194c7e2d92bd1059ea1f9
  patches:
    - patches/0001-Fix-no-instance-of-constructor-qsim-StateSpaceCUDA-F.patch  # [cuda_compiler != "None"]
    - patches/0002-Remove-PUBLIC-from-target_link_libraries-with-OpenMP.patch  # [cuda_compiler != "None"]
    - patches/0003-Set-pybind11_INCLUDE_DIRS-correctly-for-CUDA.patch          # [cuda_compiler != "None"]
    - patches/0004-Set-PYTHON_INCLUDE_DIR-in-setup.py.patch
    - patches/0005-Allow-installing-for-Python-3.12.patch
    - patches/0006-Set-CUDA_ARCHITECTURES-all-cmake-policy-CMP0104.patch       # [cuda_compiler != "None"]
    - patches/0007-Always-skip-test_cirq_qsim_gpu_amplitudes-because-no.patch  # [cuda_compiler != "None"]
    - patches/0008-Add-support-for-additional-CMake-arguments.patch
    - patches/0009-Use-CMAKE_SYSTEM_NAME-and-CMAKE_SYSTEM_PROCESSOR-for.patch
    - patches/0010-Do-not-set-includes-on-Apple-arm64-in-basis.patch

build:
  skip: true  # [win]
  # For some reason Python 3.12 fails to resolve and gives:
  # nothing provides _python_rc needed by python-3.12.0rc3-rc3_hab00c5b_1_cpython
  skip: true  # [(cuda_compiler != "None" and py==312) or cuda_compiler_version not in ("None", "11.8", "12.0")]
  number: {{ build }}
  string: cuda{{ cuda_compiler_version | replace('.', '') }}_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
  ignore_run_exports_from:
    - {{ compiler('cuda') }}  # [cuda_compiler != "None"]
  script_env:
    - CUQUANTUM_ROOT=$PREFIX  # [cuda_compiler != "None"]
    - CUDAARCHS=70-real;75-real;80-real;86-real;89-real;90  # [cuda_compiler != "None"]

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - pybind11                               # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}                 # [cuda_compiler != "None"]
    - llvm-openmp  # [osx]
    - libgomp      # [linux]
    - cmake >=3.27
    - make
  host:
    - python
    - pybind11
    - pybind11-abi
    - setuptools >=45
    - wheel
    - pip
    - numpy
    - llvm-openmp  # [osx]
    - custatevec                                # [cuda_compiler != "None"]
    - libcublas-dev                             # [(cuda_compiler_version or "").startswith("12")]
    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != "None"]
  run:
    - python
    - absl-py
    - cirq-core
    - typing_extensions
    - {{ pin_compatible('numpy', max_pin='x') }}
    - {{ pin_compatible('custatevec', max_pin='x') }}        # [cuda_compiler != "None"]
    - cudatoolkit                                            # [(cuda_compiler_version or "").startswith("11")]
    - {{ pin_compatible('libcublas', max_pin='x') }}         # [(cuda_compiler_version or "").startswith("12")]
    - cuda-version >={{ cuda_major }}.2,<{{ cuda_major+1 }}  # [(cuda_compiler_version or "").startswith("11")]
    - cuda-version >={{ cuda_major }}.0,<{{ cuda_major+1 }}  # [(cuda_compiler_version or "").startswith("12")]

test:
  imports:
    - qsimcirq
  source_files:
    - qsimcirq_tests
  commands:
    - pip check
    - cd qsimcirq_tests && pytest -vvv .
  requires:
    - pip
    - pytest
    - pybind11

about:
  home: https://quantumai.google/qsim
  summary: Quantum circuit simulators qsim and qsimh.
  license: Apache-2.0
  license_file:
    - LICENSE

extra:
  recipe-maintainers:
    - basnijholt
    - BastianZim
    - leofang
